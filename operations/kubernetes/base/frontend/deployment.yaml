apiVersion: apps/v1
kind: Deployment
metadata:
  name: bc-frontend
  namespace: bookcars
  labels:
    app: bc-frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: bc-frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: bc-frontend
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: DoesNotExist
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - bc-frontend
              topologyKey: kubernetes.io/hostname
      imagePullSecrets:
        - name: registry-credentials
      containers:
        - name: bc-frontend
          image: ghcr.io/cariidev/bookcars/frontend:latest
          ports:
            - containerPort: 80
              name: http
            - containerPort: 443
              name: https
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
          volumeMounts:
            - name: cdn-storage
              mountPath: /var/www/cdn/bookcars
      volumes:
        - name: cdn-storage
          persistentVolumeClaim:
            claimName: cdn-storage-pvc